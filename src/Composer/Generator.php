<?php

declare(strict_types=1);

namespace WoLfulus\Extras\Composer;

use Nette\PhpGenerator\Dumper;
use Nette\PhpGenerator\PhpFile;
use Nette\PhpGenerator\Printer;
use WoLfulus\Extras\Contracts\Package;
use WoLfulus\Extras\Contracts\Repository;

/**
 * Class Generator.
 */
final class Generator
{
    /**
     * @var string
     */
    private $namespace = '';

    /**
     * @var string
     */
    private $class = '';

    /**
     * @var string
     */
    private $key = '';

    /**
     * @var string
     */
    private $package = '';

    /**
     * @var array
     */
    private $packages = [];

    /**
     * Sets the originating package.
     */
    public function package(string $package): self
    {
        $this->package = $package;

        return $this;
    }

    /**
     * Sets the extra key.
     */
    public function pattern(string $key): self
    {
        $this->key = $key;

        return $this;
    }

    /**
     * Sets the class name.
     */
    public function className(string $class): self
    {
        $exploded = explode('\\', $class);
        $this->class = (string) array_pop($exploded);
        $this->namespace = implode('\\', $exploded);

        return $this;
    }

    /**
     * Gets the unique hash id for the package/key pair.
     */
    public function hash(): string
    {
        return sha1("{$this->package}:{$this->key}");
    }

    /**
     * Adds a package to the list.
     */
    public function addPackage(string $package, array $value): self
    {
        $this->packages[] = (new Dumper())->format('new \\WoLfulus\\Extras\\Package(?, ?)', $package, $value);

        return $this;
    }

    /**
     * Generates the class code.
     */
    public function generate(): string
    {
        $file = new PhpFile();
        $file->addComment('This file was auto generated by package wolfulus/extras.');
        $file->addComment('https://github.com/WoLfulus/extras');
        $file->addComment('');
        $file->addComment("The package that requested the generation of this file is \"{$this->package}\"");
        $file->setStrictTypes();

        if ($this->namespace !== '') {
            $classInstance = $file->addNamespace($this->namespace)->addClass($this->class);
        } else {
            $classInstance = $file->addClass($this->class);
        }

        $classInstance->addImplement('\\'.Repository::class);
        $classInstance->addComment($this->class.' class.');

        $classInstance->addProperty('packages')
            ->setProtected()
            ->setNullable()
            ->setStatic()
            ->addComment('@var null|array<\\'.Package::class.">\n")
            ->setInitialized()
        ;

        $serializedPackages = "\t".implode(",\n\t", $this->packages);

        $get = $classInstance->addMethod('get')->setPublic()->setStatic();
        $get->setReturnType('array')
            ->addComment("Gets all packages with an extra matching '{$this->key}' key.")
            ->addComment('')
            ->addComment('@return array<\\WoLfulus\\Extras\\Contracts\\Package>')
        ;
        $get->addBody("return self::\$packages = self::\$packages ?? [\n{$serializedPackages}\n];\n");

        $printer = new Printer();
        $printer->setTypeResolving(false);

        return $printer->printFile($file);
    }
}
